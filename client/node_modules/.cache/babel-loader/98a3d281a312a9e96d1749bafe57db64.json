{"ast":null,"code":"var binary = require('binary');\n\nvar PullStream = require('../PullStream');\n\nvar unzip = require('./unzip');\n\nvar Promise = require('bluebird');\n\nvar BufferStream = require('../BufferStream');\n\nvar parseExtraField = require('../parseExtraField');\n\nvar Buffer = require('../Buffer');\n\nvar signature = Buffer.alloc(4);\nsignature.writeUInt32LE(0x06054b50, 0);\n\nmodule.exports = function centralDirectory(source) {\n  var endDir = PullStream(),\n      records = PullStream(),\n      self = this,\n      vars;\n  return source.size().then(function (size) {\n    source.stream(size - 40).pipe(endDir);\n    return endDir.pull(signature);\n  }).then(function () {\n    return endDir.pull(22);\n  }).then(function (data) {\n    vars = binary.parse(data).word32lu('signature').word16lu('diskNumber').word16lu('diskStart').word16lu('numberOfRecordsOnDisk').word16lu('numberOfRecords').word32lu('sizeOfCentralDirectory').word32lu('offsetToStartOfCentralDirectory').word16lu('commentLength').vars;\n    source.stream(vars.offsetToStartOfCentralDirectory).pipe(records);\n    vars.files = Promise.mapSeries(Array(vars.numberOfRecords), function () {\n      return records.pull(46).then(function (data) {\n        var vars = binary.parse(data).word32lu('signature').word16lu('versionMadeBy').word16lu('versionsNeededToExtract').word16lu('flags').word16lu('compressionMethod').word16lu('lastModifiedTime').word16lu('lastModifiedDate').word32lu('crc32').word32lu('compressedSize').word32lu('uncompressedSize').word16lu('fileNameLength').word16lu('extraFieldLength').word16lu('fileCommentLength').word16lu('diskNumber').word16lu('internalFileAttributes').word32lu('externalFileAttributes').word32lu('offsetToLocalFileHeader').vars;\n        return records.pull(vars.fileNameLength).then(function (fileNameBuffer) {\n          vars.pathBuffer = fileNameBuffer;\n          vars.path = fileNameBuffer.toString('utf8');\n          vars.isUnicode = vars.flags & 0x11;\n          return records.pull(vars.extraFieldLength);\n        }).then(function (extraField) {\n          vars.extra = parseExtraField(extraField, vars);\n          return records.pull(vars.fileCommentLength);\n        }).then(function (comment) {\n          vars.comment = comment;\n\n          vars.stream = function (_password) {\n            return unzip(source, vars.offsetToLocalFileHeader, _password);\n          };\n\n          vars.buffer = function (_password) {\n            return BufferStream(vars.stream(_password));\n          };\n\n          return vars;\n        });\n      });\n    });\n    return Promise.props(vars);\n  });\n};","map":{"version":3,"sources":["C:/TechQuartier/TechTalents/visibleImpact/visibleimpactapp/node_modules/unzipper/lib/Open/directory.js"],"names":["binary","require","PullStream","unzip","Promise","BufferStream","parseExtraField","Buffer","signature","alloc","writeUInt32LE","module","exports","centralDirectory","source","endDir","records","self","vars","size","then","stream","pipe","pull","data","parse","word32lu","word16lu","offsetToStartOfCentralDirectory","files","mapSeries","Array","numberOfRecords","fileNameLength","fileNameBuffer","pathBuffer","path","toString","isUnicode","flags","extraFieldLength","extraField","extra","fileCommentLength","comment","_password","offsetToLocalFileHeader","buffer","props"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,eAAD,CAAxB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,UAAD,CAArB;;AACA,IAAII,YAAY,GAAGJ,OAAO,CAAC,iBAAD,CAA1B;;AACA,IAAIK,eAAe,GAAGL,OAAO,CAAC,oBAAD,CAA7B;;AACA,IAAIM,MAAM,GAAGN,OAAO,CAAC,WAAD,CAApB;;AAEA,IAAIO,SAAS,GAAGD,MAAM,CAACE,KAAP,CAAa,CAAb,CAAhB;AACAD,SAAS,CAACE,aAAV,CAAwB,UAAxB,EAAmC,CAAnC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,gBAAT,CAA0BC,MAA1B,EAAkC;AACjD,MAAIC,MAAM,GAAGb,UAAU,EAAvB;AAAA,MACIc,OAAO,GAAGd,UAAU,EADxB;AAAA,MAEIe,IAAI,GAAG,IAFX;AAAA,MAGIC,IAHJ;AAKA,SAAOJ,MAAM,CAACK,IAAP,GACJC,IADI,CACC,UAASD,IAAT,EAAe;AACnBL,IAAAA,MAAM,CAACO,MAAP,CAAcF,IAAI,GAAC,EAAnB,EAAuBG,IAAvB,CAA4BP,MAA5B;AACA,WAAOA,MAAM,CAACQ,IAAP,CAAYf,SAAZ,CAAP;AACD,GAJI,EAKJY,IALI,CAKC,YAAW;AACf,WAAOL,MAAM,CAACQ,IAAP,CAAY,EAAZ,CAAP;AACD,GAPI,EAQJH,IARI,CAQC,UAASI,IAAT,EAAe;AACnBN,IAAAA,IAAI,GAAGlB,MAAM,CAACyB,KAAP,CAAaD,IAAb,EACJE,QADI,CACK,WADL,EAEJC,QAFI,CAEK,YAFL,EAGJA,QAHI,CAGK,WAHL,EAIJA,QAJI,CAIK,uBAJL,EAKJA,QALI,CAKK,iBALL,EAMJD,QANI,CAMK,wBANL,EAOJA,QAPI,CAOK,iCAPL,EAQJC,QARI,CAQK,eARL,EASJT,IATH;AAWAJ,IAAAA,MAAM,CAACO,MAAP,CAAcH,IAAI,CAACU,+BAAnB,EAAoDN,IAApD,CAAyDN,OAAzD;AAEAE,IAAAA,IAAI,CAACW,KAAL,GAAazB,OAAO,CAAC0B,SAAR,CAAkBC,KAAK,CAACb,IAAI,CAACc,eAAN,CAAvB,EAA8C,YAAW;AACpE,aAAOhB,OAAO,CAACO,IAAR,CAAa,EAAb,EAAiBH,IAAjB,CAAsB,UAASI,IAAT,EAAe;AAC1C,YAAIN,IAAI,GAAGlB,MAAM,CAACyB,KAAP,CAAaD,IAAb,EACRE,QADQ,CACC,WADD,EAERC,QAFQ,CAEC,eAFD,EAGRA,QAHQ,CAGC,yBAHD,EAIRA,QAJQ,CAIC,OAJD,EAKRA,QALQ,CAKC,mBALD,EAMRA,QANQ,CAMC,kBAND,EAORA,QAPQ,CAOC,kBAPD,EAQRD,QARQ,CAQC,OARD,EASRA,QATQ,CASC,gBATD,EAURA,QAVQ,CAUC,kBAVD,EAWRC,QAXQ,CAWC,gBAXD,EAYRA,QAZQ,CAYC,kBAZD,EAaRA,QAbQ,CAaC,mBAbD,EAcRA,QAdQ,CAcC,YAdD,EAeRA,QAfQ,CAeC,wBAfD,EAgBRD,QAhBQ,CAgBC,wBAhBD,EAiBRA,QAjBQ,CAiBC,yBAjBD,EAkBRR,IAlBH;AAoBF,eAAOF,OAAO,CAACO,IAAR,CAAaL,IAAI,CAACe,cAAlB,EAAkCb,IAAlC,CAAuC,UAASc,cAAT,EAAyB;AACrEhB,UAAAA,IAAI,CAACiB,UAAL,GAAkBD,cAAlB;AACAhB,UAAAA,IAAI,CAACkB,IAAL,GAAYF,cAAc,CAACG,QAAf,CAAwB,MAAxB,CAAZ;AACAnB,UAAAA,IAAI,CAACoB,SAAL,GAAiBpB,IAAI,CAACqB,KAAL,GAAa,IAA9B;AACA,iBAAOvB,OAAO,CAACO,IAAR,CAAaL,IAAI,CAACsB,gBAAlB,CAAP;AACD,SALM,EAMNpB,IANM,CAMD,UAASqB,UAAT,EAAqB;AACzBvB,UAAAA,IAAI,CAACwB,KAAL,GAAapC,eAAe,CAACmC,UAAD,EAAavB,IAAb,CAA5B;AACA,iBAAOF,OAAO,CAACO,IAAR,CAAaL,IAAI,CAACyB,iBAAlB,CAAP;AACD,SATM,EAUNvB,IAVM,CAUD,UAASwB,OAAT,EAAkB;AACtB1B,UAAAA,IAAI,CAAC0B,OAAL,GAAeA,OAAf;;AACA1B,UAAAA,IAAI,CAACG,MAAL,GAAc,UAASwB,SAAT,EAAoB;AAChC,mBAAO1C,KAAK,CAACW,MAAD,EAASI,IAAI,CAAC4B,uBAAd,EAAsCD,SAAtC,CAAZ;AACD,WAFD;;AAGA3B,UAAAA,IAAI,CAAC6B,MAAL,GAAc,UAASF,SAAT,EAAoB;AAChC,mBAAOxC,YAAY,CAACa,IAAI,CAACG,MAAL,CAAYwB,SAAZ,CAAD,CAAnB;AACD,WAFD;;AAGA,iBAAO3B,IAAP;AACD,SAnBM,CAAP;AAoBD,OAzCQ,CAAP;AA0CH,KA3Cc,CAAb;AA6CF,WAAOd,OAAO,CAAC4C,KAAR,CAAc9B,IAAd,CAAP;AACD,GApEM,CAAP;AAqED,CA3ED","sourcesContent":["var binary = require('binary');\nvar PullStream = require('../PullStream');\nvar unzip = require('./unzip');\nvar Promise = require('bluebird');\nvar BufferStream = require('../BufferStream');\nvar parseExtraField = require('../parseExtraField');\nvar Buffer = require('../Buffer');\n\nvar signature = Buffer.alloc(4);\nsignature.writeUInt32LE(0x06054b50,0);\n\nmodule.exports = function centralDirectory(source) {\n  var endDir = PullStream(),\n      records = PullStream(),\n      self = this,\n      vars;\n\n  return source.size()\n    .then(function(size) {\n      source.stream(size-40).pipe(endDir);\n      return endDir.pull(signature);\n    })\n    .then(function() {\n      return endDir.pull(22);\n    })\n    .then(function(data) {\n      vars = binary.parse(data)\n        .word32lu('signature')\n        .word16lu('diskNumber')\n        .word16lu('diskStart')\n        .word16lu('numberOfRecordsOnDisk')\n        .word16lu('numberOfRecords')\n        .word32lu('sizeOfCentralDirectory')\n        .word32lu('offsetToStartOfCentralDirectory')\n        .word16lu('commentLength')\n        .vars;\n\n      source.stream(vars.offsetToStartOfCentralDirectory).pipe(records);\n\n      vars.files = Promise.mapSeries(Array(vars.numberOfRecords),function() {\n        return records.pull(46).then(function(data) {    \n          var vars = binary.parse(data)\n            .word32lu('signature')\n            .word16lu('versionMadeBy')\n            .word16lu('versionsNeededToExtract')\n            .word16lu('flags')\n            .word16lu('compressionMethod')\n            .word16lu('lastModifiedTime')\n            .word16lu('lastModifiedDate')\n            .word32lu('crc32')\n            .word32lu('compressedSize')\n            .word32lu('uncompressedSize')\n            .word16lu('fileNameLength')\n            .word16lu('extraFieldLength')\n            .word16lu('fileCommentLength')\n            .word16lu('diskNumber')\n            .word16lu('internalFileAttributes')\n            .word32lu('externalFileAttributes')\n            .word32lu('offsetToLocalFileHeader')\n            .vars;\n\n        return records.pull(vars.fileNameLength).then(function(fileNameBuffer) {\n          vars.pathBuffer = fileNameBuffer;\n          vars.path = fileNameBuffer.toString('utf8');\n          vars.isUnicode = vars.flags & 0x11;\n          return records.pull(vars.extraFieldLength);\n        })\n        .then(function(extraField) {\n          vars.extra = parseExtraField(extraField, vars);\n          return records.pull(vars.fileCommentLength);\n        })\n        .then(function(comment) {\n          vars.comment = comment;\n          vars.stream = function(_password) {\n            return unzip(source, vars.offsetToLocalFileHeader,_password);\n          };\n          vars.buffer = function(_password) {\n            return BufferStream(vars.stream(_password));\n          };\n          return vars;\n        });\n      });\n    });\n\n    return Promise.props(vars);\n  });\n};\n"]},"metadata":{},"sourceType":"script"}