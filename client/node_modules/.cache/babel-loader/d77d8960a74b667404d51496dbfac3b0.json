{"ast":null,"code":"const request = require(\"request\");\n\nmodule.exports = function (headers) {\n  if (!headers.api_key) throw new Error(\"Missing API Key. openai.api_key = YOUR_API_KEY\");\n  return new Promise((resolve, reject) => {\n    var options = {\n      method: \"GET\",\n      url: \"https://api.openai.com/v1/files\",\n      headers: headers.getHeaders()\n    };\n    request(options, function (error, response) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(JSON.parse(response.body));\n      }\n    });\n  });\n};","map":{"version":3,"sources":["C:/GPT-3/GPT-3-Prototype/node_modules/openai-node/methods/FileList.js"],"names":["request","require","module","exports","headers","api_key","Error","Promise","resolve","reject","options","method","url","getHeaders","error","response","JSON","parse","body"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmB;AAChC,MAAI,CAACA,OAAO,CAACC,OAAb,EAAsB,MAAM,IAAIC,KAAJ,CAAU,gDAAV,CAAN;AACtB,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,QAAIC,OAAO,GAAG;AACVC,MAAAA,MAAM,EAAE,KADE;AAEVC,MAAAA,GAAG,EAAE,iCAFK;AAGVR,MAAAA,OAAO,EAAEA,OAAO,CAACS,UAAR;AAHC,KAAd;AAKAb,IAAAA,OAAO,CAACU,OAAD,EAAU,UAAUI,KAAV,EAAiBC,QAAjB,EAA2B;AACxC,UAAID,KAAJ,EAAW;AACPL,QAAAA,MAAM,CAACK,KAAD,CAAN;AACH,OAFD,MAEO;AACHN,QAAAA,OAAO,CAACQ,IAAI,CAACC,KAAL,CAAWF,QAAQ,CAACG,IAApB,CAAD,CAAP;AACH;AACJ,KANM,CAAP;AAOH,GAbM,CAAP;AAcH,CAhBD","sourcesContent":["const request = require(\"request\");\r\n\r\nmodule.exports = function (headers) {\r\n    if (!headers.api_key) throw new Error(\"Missing API Key. openai.api_key = YOUR_API_KEY\");\r\n    return new Promise((resolve, reject) => {\r\n        var options = {\r\n            method: \"GET\",\r\n            url: \"https://api.openai.com/v1/files\",\r\n            headers: headers.getHeaders(),\r\n        };\r\n        request(options, function (error, response) {\r\n            if (error) {\r\n                reject(error);\r\n            } else {\r\n                resolve(JSON.parse(response.body));\r\n            }\r\n        });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"script"}