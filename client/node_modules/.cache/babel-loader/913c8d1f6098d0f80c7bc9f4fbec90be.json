{"ast":null,"code":"var fs = require('fs');\n\nvar Promise = require('bluebird');\n\nvar directory = require('./directory');\n\nvar Stream = require('stream'); // Backwards compatibility for node versions < 8\n\n\nif (!Stream.Writable || !Stream.Writable.prototype.destroy) Stream = require('readable-stream');\nmodule.exports = {\n  buffer: function (buffer) {\n    var source = {\n      stream: function (offset, length) {\n        var stream = Stream.PassThrough();\n        stream.end(buffer.slice(offset, length));\n        return stream;\n      },\n      size: function () {\n        return Promise.resolve(buffer.length);\n      }\n    };\n    return directory(source);\n  },\n  file: function (filename) {\n    var source = {\n      stream: function (offset, length) {\n        return fs.createReadStream(filename, {\n          start: offset,\n          end: length && offset + length\n        });\n      },\n      size: function () {\n        return new Promise(function (resolve, reject) {\n          fs.stat(filename, function (err, d) {\n            if (err) reject(err);else resolve(d.size);\n          });\n        });\n      }\n    };\n    return directory(source);\n  },\n  url: function (request, opt) {\n    if (typeof opt === 'string') opt = {\n      url: opt\n    };\n    if (!opt.url) throw 'URL missing';\n    opt.headers = opt.headers || {};\n    var source = {\n      stream: function (offset, length) {\n        var options = Object.create(opt);\n        options.headers = Object.create(opt.headers);\n        options.headers.range = 'bytes=' + offset + '-' + (length ? length : '');\n        return request(options);\n      },\n      size: function () {\n        return new Promise(function (resolve, reject) {\n          var req = request(opt);\n          req.on('response', function (d) {\n            req.abort();\n            resolve(d.headers['content-length']);\n          }).on('error', reject);\n        });\n      }\n    };\n    return directory(source);\n  },\n  s3: function (client, params) {\n    var source = {\n      size: function () {\n        return new Promise(function (resolve, reject) {\n          client.headObject(params, function (err, d) {\n            if (err) reject(err);else resolve(d.ContentLength);\n          });\n        });\n      },\n      stream: function (offset, length) {\n        var d = {};\n\n        for (var key in params) d[key] = params[key];\n\n        d.Range = 'bytes=' + offset + '-' + (length ? length : '');\n        return client.getObject(d).createReadStream();\n      }\n    };\n    return directory(source);\n  }\n};","map":{"version":3,"sources":["C:/TechQuartier/TechTalents/visibleImpact/visibleimpactapp/node_modules/unzipper/lib/Open/index.js"],"names":["fs","require","Promise","directory","Stream","Writable","prototype","destroy","module","exports","buffer","source","stream","offset","length","PassThrough","end","slice","size","resolve","file","filename","createReadStream","start","reject","stat","err","d","url","request","opt","headers","options","Object","create","range","req","on","abort","s3","client","params","headObject","ContentLength","key","Range","getObject"],"mappings":"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","sourcesContent":["var fs = require('fs');\nvar Promise = require('bluebird');\nvar directory = require('./directory');\nvar Stream = require('stream');\n\n// Backwards compatibility for node versions < 8\nif (!Stream.Writable || !Stream.Writable.prototype.destroy)\n  Stream = require('readable-stream');\n\nmodule.exports = {\n  buffer: function(buffer) {\n    var source = {\n      stream: function(offset, length) {\n        var stream = Stream.PassThrough();\n        stream.end(buffer.slice(offset, length));\n        return stream;\n      },\n      size: function() {\n        return Promise.resolve(buffer.length);\n      }\n    };\n    return directory(source);\n  },\n  file: function(filename) {\n    var source = {\n      stream: function(offset,length) {\n        return fs.createReadStream(filename,{start: offset, end: length && offset+length});\n      },\n      size: function() {\n        return new Promise(function(resolve,reject) {\n          fs.stat(filename,function(err,d) {\n            if (err)\n              reject(err);\n            else\n              resolve(d.size);\n          });\n        });\n      }\n    };\n    return directory(source);\n  },\n\n  url: function(request,opt) {\n    if (typeof opt === 'string')\n      opt = {url: opt};\n    if (!opt.url)\n      throw 'URL missing';\n    opt.headers = opt.headers || {};\n\n    var source = {\n      stream : function(offset,length) {\n        var options = Object.create(opt);\n        options.headers = Object.create(opt.headers);\n        options.headers.range = 'bytes='+offset+'-' + (length ? length : '');\n        return request(options);\n      },\n      size: function() {\n        return new Promise(function(resolve,reject) {\n          var req = request(opt);\n          req.on('response',function(d) {\n            req.abort();\n            resolve(d.headers['content-length']);\n          }).on('error',reject);\n        });\n      }\n    };\n\n    return directory(source);\n  },\n\n  s3 : function(client,params) {\n    var source = {\n      size: function() {\n        return new Promise(function(resolve,reject) {\n          client.headObject(params, function(err,d) {\n            if (err)\n              reject(err);\n            else\n              resolve(d.ContentLength);\n          });\n        });\n      },\n      stream: function(offset,length) {\n        var d = {};\n        for (var key in params)\n          d[key] = params[key];\n        d.Range = 'bytes='+offset+'-' + (length ? length : '');\n        return client.getObject(d).createReadStream();\n      }\n    };\n\n    return directory(source);\n  }\n};\n\n"]},"metadata":{},"sourceType":"script"}