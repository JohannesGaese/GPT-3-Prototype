{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\TechQuartier\\\\TechTalents\\\\visibleImpact\\\\visibleimpactapp\\\\client\\\\src\\\\context\\\\FilterContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useReducer, useContext } from \"react\";\nexport const FilterContext = /*#__PURE__*/createContext();\nconsole.log(FilterContext);\nconst attributesFilter = [\"esgGoals\", \"sustainableGoals\", \"metrics\"];\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"UPDATE_DONATIONCARD_FILTER\":\n      return { ...state,\n        cardFilter: action.payload\n      };\n\n    case \"UPDATE_ORGANISATION_FILTER\":\n      return { ...state,\n        organisationFilter: action.payload\n      };\n\n    default:\n      throw new Error();\n  }\n};\n\nexport const FilterProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    cardFilter: {\n      sustainableGoals: [],\n      esgGoals: [],\n      metrics: []\n    },\n    organisationFilter: {\n      organisations: [],\n      trackerPoints: []\n    }\n  });\n\n  const toggleFilter = async (filterName, criterium, whichFilter) => {\n    let newFilter = whichFilter === \"DonationCards\" ? { ...state.cardFilter\n    } : { ...state.organisationFilter\n    };\n\n    if (newFilter[filterName].includes(criterium)) {\n      newFilter[filterName] = newFilter[filterName].filter(element => element !== criterium);\n    } else {\n      newFilter[filterName].push(criterium);\n    }\n\n    dispatch({\n      type: whichFilter === \"DonationCards\" ? \"UPDATE_DONATIONCARD_FILTER\" : \"UPDATE_ORGANISATION_FILTER\",\n      payload: newFilter\n    });\n  };\n\n  const clearFilter = async (filterName, whichFilter = \"DonationCards\") => {\n    let newFilter = whichFilter === \"DonationCards\" ? { ...state.cardFilter\n    } : { ...state.organisationFilter\n    };\n    console.log(\"clearFilter\", newFilter);\n    Object.keys(newFilter).map(attribute => {\n      newFilter[attribute] = [];\n    });\n    newFilter[filterName] = [];\n    console.log(\"clearFilter\", newFilter);\n    dispatch({\n      type: whichFilter === \"DonationCards\" ? \"UPDATE_DONATIONCARD_FILTER\" : \"UPDATE_ORGANISATION_FILTER\",\n      payload: newFilter\n    });\n  };\n\n  const getFilteredDonationCards = (filter, donations) => {\n    return donations.filter(donation => {\n      // convert isLaw in Law from Booelean to String\n      let showDonation = true;\n      let alreadyShown = false; // check if Law is used anyway\n\n      for (let attribute in filter) {\n        let attributeShow = false;\n\n        if (filter[attribute].includes(donation[attribute])) {\n          attributeShow = true;\n        }\n\n        showDonation = attributeShow ? alreadyShown ? showDonation ? true : false : true : false;\n        alreadyShown = true;\n      }\n\n      return showDonation;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FilterContext.Provider, {\n    value: {\n      cardFilter: state.cardFilter,\n      organisationFilter: state.organisationFilter,\n      getFilteredDonationCards: getFilteredDonationCards,\n      toggleFilter,\n      clearFilter\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 7\n  }, this);\n};\n\n_s(FilterProvider, \"11TlHUNtUbYgdLcA7NIL/EauQw8=\");\n\n_c = FilterProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterProvider\");","map":{"version":3,"sources":["C:/TechQuartier/TechTalents/visibleImpact/visibleimpactapp/client/src/context/FilterContext.js"],"names":["React","createContext","useState","useReducer","useContext","FilterContext","console","log","attributesFilter","reducer","state","action","type","cardFilter","payload","organisationFilter","Error","FilterProvider","props","dispatch","sustainableGoals","esgGoals","metrics","organisations","trackerPoints","toggleFilter","filterName","criterium","whichFilter","newFilter","includes","filter","element","push","clearFilter","Object","keys","map","attribute","getFilteredDonationCards","donations","donation","showDonation","alreadyShown","attributeShow","children"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useReducer, useContext } from \"react\";\r\n\r\nexport const FilterContext = createContext();\r\nconsole.log(FilterContext)\r\n\r\nconst attributesFilter = [\"esgGoals\", \"sustainableGoals\", \"metrics\"];\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_DONATIONCARD_FILTER\":\r\n      return {\r\n        ...state,\r\n        cardFilter: action.payload,\r\n      };\r\n    case \"UPDATE_ORGANISATION_FILTER\":\r\n      return {\r\n        ...state,\r\n        organisationFilter: action.payload,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nexport const FilterProvider = (props) => {\r\n    const [state, dispatch] = useReducer(reducer, {\r\n      cardFilter: {\r\n        sustainableGoals: [],\r\n        esgGoals: [],\r\n        metrics: [],\r\n      },\r\n      organisationFilter: {\r\n        organisations: [],\r\n        trackerPoints: [],\r\n      },\r\n    });\r\n\r\n\r\n    const toggleFilter = async (\r\n        filterName,\r\n        criterium,\r\n        whichFilter) => {\r\n\r\n            let newFilter = \r\n                whichFilter === \"DonationCards\"\r\n                    ? { ...state.cardFilter}\r\n                    : { ...state.organisationFilter};\r\n\r\n            if (newFilter[filterName].includes(criterium)) {\r\n\r\n              newFilter[filterName] = newFilter[filterName].filter(\r\n                (element) => element !== criterium\r\n              );\r\n            } else {\r\n              newFilter[filterName].push(criterium);\r\n\r\n            }\r\n            dispatch({\r\n                type:\r\n                  whichFilter === \"DonationCards\"\r\n                    ? \"UPDATE_DONATIONCARD_FILTER\"\r\n                    : \"UPDATE_ORGANISATION_FILTER\",\r\n                payload: newFilter,\r\n            });\r\n        };\r\n    \r\n    const clearFilter = async (filterName, whichFilter = \"DonationCards\") => {\r\n        let newFilter =\r\n          whichFilter === \"DonationCards\"\r\n            ? { ...state.cardFilter }\r\n            : { ...state.organisationFilter };\r\n        console.log(\"clearFilter\", newFilter)\r\n        Object.keys(newFilter).map((attribute) => {\r\n          newFilter[attribute] = [];\r\n        })\r\n        newFilter[filterName] = [];\r\n        console.log(\"clearFilter\", newFilter)\r\n\r\n       \r\n    \r\n        dispatch({\r\n          type:\r\n            whichFilter === \"DonationCards\"\r\n              ? \"UPDATE_DONATIONCARD_FILTER\"\r\n              : \"UPDATE_ORGANISATION_FILTER\",\r\n          payload: newFilter,\r\n        });\r\n    };\r\n\r\n    const getFilteredDonationCards = (filter, donations) => {\r\n        return donations.filter((donation) => {\r\n            // convert isLaw in Law from Booelean to String\r\n            let showDonation = true;\r\n            let alreadyShown = false;\r\n            // check if Law is used anyway\r\n            for (let attribute in filter) {\r\n                let attributeShow = false\r\n                if (filter[attribute].includes(donation[attribute])) {\r\n                    attributeShow = true;\r\n                }\r\n                showDonation = attributeShow\r\n                  ? alreadyShown\r\n                    ? showDonation\r\n                      ? true\r\n                      : false\r\n                    : true\r\n                  : false;\r\n                alreadyShown = true;\r\n            }\r\n            return showDonation;\r\n        })\r\n    };\r\n    \r\n    return (\r\n      <FilterContext.Provider\r\n        value={{\r\n          cardFilter: state.cardFilter,\r\n          organisationFilter: state.organisationFilter,\r\n          getFilteredDonationCards: getFilteredDonationCards,\r\n          toggleFilter,\r\n          clearFilter,        \r\n        }}\r\n      >\r\n        {props.children}\r\n      </FilterContext.Provider>\r\n    );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}