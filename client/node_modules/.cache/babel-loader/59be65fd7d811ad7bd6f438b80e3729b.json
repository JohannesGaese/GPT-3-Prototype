{"ast":null,"code":"const request = require(\"request\");\n\nmodule.exports = function (headers, {\n  file,\n  purpose\n} = {}) {\n  if (!purpose) throw new Error(\"Missing purpose. Purpose must be answers or search\");\n  if (!file) throw new Error(\"Missing file. Provide the path to the file\");\n  if (!headers.api_key) throw new Error(\"Missing API Key. openai.api_key = YOUR_API_KEY\");\n  return new Promise((resolve, reject) => {\n    var options = {\n      method: \"POST\",\n      url: `https://api.openai.com/v1/files`,\n      headers: headers.getHeaders(),\n      formData: {\n        purpose: purpose,\n        file: {\n          value: file,\n          options: {\n            filename: file.path,\n            contentType: null\n          }\n        }\n      }\n    };\n    request(options, function (error, response) {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(JSON.parse(response.body));\n      }\n    });\n  });\n};","map":{"version":3,"sources":["C:/GPT-3/GPT-3-Prototype/node_modules/openai-node/methods/FileCreate.js"],"names":["request","require","module","exports","headers","file","purpose","Error","api_key","Promise","resolve","reject","options","method","url","getHeaders","formData","value","filename","path","contentType","error","response","JSON","parse","body"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAoB,EAAvC,EAA2C;AACxD,MAAI,CAACA,OAAL,EAAc,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;AACd,MAAI,CAACF,IAAL,EAAW,MAAM,IAAIE,KAAJ,CAAU,4CAAV,CAAN;AACX,MAAI,CAACH,OAAO,CAACI,OAAb,EAAsB,MAAM,IAAID,KAAJ,CAAU,gDAAV,CAAN;AACtB,SAAO,IAAIE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,QAAIC,OAAO,GAAG;AACVC,MAAAA,MAAM,EAAE,MADE;AAEVC,MAAAA,GAAG,EAAG,iCAFI;AAGVV,MAAAA,OAAO,EAAEA,OAAO,CAACW,UAAR,EAHC;AAKVC,MAAAA,QAAQ,EAAE;AACNV,QAAAA,OAAO,EAAEA,OADH;AAEND,QAAAA,IAAI,EAAE;AACFY,UAAAA,KAAK,EAAEZ,IADL;AAEFO,UAAAA,OAAO,EAAE;AACLM,YAAAA,QAAQ,EAAEb,IAAI,CAACc,IADV;AAELC,YAAAA,WAAW,EAAE;AAFR;AAFP;AAFA;AALA,KAAd;AAgBApB,IAAAA,OAAO,CAACY,OAAD,EAAU,UAAUS,KAAV,EAAiBC,QAAjB,EAA2B;AACxC,UAAID,KAAJ,EAAW;AACPV,QAAAA,MAAM,CAACU,KAAD,CAAN;AACH,OAFD,MAEO;AACHX,QAAAA,OAAO,CAACa,IAAI,CAACC,KAAL,CAAWF,QAAQ,CAACG,IAApB,CAAD,CAAP;AACH;AACJ,KANM,CAAP;AAOH,GAxBM,CAAP;AAyBH,CA7BD","sourcesContent":["const request = require(\"request\");\r\n\r\nmodule.exports = function (headers, { file, purpose } = {}) {\r\n    if (!purpose) throw new Error(\"Missing purpose. Purpose must be answers or search\");\r\n    if (!file) throw new Error(\"Missing file. Provide the path to the file\");\r\n    if (!headers.api_key) throw new Error(\"Missing API Key. openai.api_key = YOUR_API_KEY\");\r\n    return new Promise((resolve, reject) => {\r\n        var options = {\r\n            method: \"POST\",\r\n            url: `https://api.openai.com/v1/files`,\r\n            headers: headers.getHeaders(),\r\n\r\n            formData: {\r\n                purpose: purpose,\r\n                file: {\r\n                    value: file,\r\n                    options: {\r\n                        filename: file.path,\r\n                        contentType: null,\r\n                    },\r\n                },\r\n            },\r\n        };\r\n        request(options, function (error, response) {\r\n            if (error) {\r\n                reject(error);\r\n            } else {\r\n                resolve(JSON.parse(response.body));\r\n            }\r\n        });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"script"}